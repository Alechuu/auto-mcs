#!
# title: amscript Base Library
# author: Kaleb Efflandt
# version: 1.0
# description: A collection of tools to integrate Auto-MCS in-game
#!



# '!reloadscripts' command to forcefully close and reload all scripts from in game
@player.on_alias(player, command='reloadscripts', permission='op'):
	loaded_count, total_count = server._reload_scripts()
	
	# It's getting output to the console anyway
	if not player.is_server and total_count > 0:

		if loaded_count < total_count:
			player.log_warning(f'[auto-mcs] Loaded ({loaded_count}/{total_count}) script(s): check the console for info')

		elif loaded_count == 0:
			player.log_error('[auto-mcs] No scripts were loaded: check the console for info')

		else:
			player.log_success(f'[auto-mcs] Loaded ({loaded_count}/{total_count}) script(s) successfully!')

	elif total_count == 0:
		player.log('[auto-mcs] There are no scripts to load')



# Displays all amscript commands that the player has access to, with an optional search feature
@player.on_alias(player, command='help', arguments={'cmd': False}, permission='anyone'):
	if arguments['cmd']:
		player.log(f'  ------ Search for \'{arguments["cmd"]}\' ------  ', 'green', 'normal')
	else:
		player.log('  ------ All Auto-MCS commands ------', 'green', 'normal')

	for cmd in server.aliases.values():
		if perm_dict[permission] >= perm_dict[cmd['permission']]:
			if arguments['cmd']:
				if arguments['cmd'] not in cmd['command']:
					continue

			if arguments['cmd']:
				player.log(f"{cmd['syntax']}", 'white', 'normal')
			else:
				player.log(f"{cmd['command']}: {cmd['description']}", 'white', 'normal')